[tool.black]
line-length = 88
target-version = ["py37", "py38", "py39", "py310"]
skip-magic-trailing-comma = true


[tool.zimports]
black-line-length = 88


[tool.poetry]
name = "xraysink"
version = "1.6.2-beta"
description = "Instrument asyncio Python for distributed tracing with AWS X-Ray."
readme = "README.md"
authors = ["Gary Donovan <gazza@gazza.id.au>"]
license = "Apache 2.0"
homepage = "https://github.com/garyd203/xraysink"
repository = "https://github.com/garyd203/xraysink"
documentation = "https://github.com/garyd203/xraysink"
# If you update this keyword list, also update the one in github
keywords=["AWS", "XRay", "python", "asyncio", "distributed-tracing"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: System :: Monitoring",
]
packages = [
    { include="xraysink", from="src" },
]

[tool.poetry.dependencies]
# Update the environment variable `MIN_PYTHON_VERSION` in GitHub Actions
# workflow files if the minimum Python version changes.
python = "^3.7.9"
aiohttp = { version = "^3", optional = true }
async-asgi-testclient = { version = "^1.4.4", optional = true }
aws_xray_sdk = "~2"
coverage = [
    { version = "^6.3", markers = "python_version >= '3.7'", extras=["toml"], optional = true },
    { version = "~6.2", markers = "python_version < '3.7'", extras=["toml"], optional = true },
]
black = { version = "==23.1.0", optional = true }
fastapi = { version = "^0.92", optional = true }
flake8 = { version = "~4", optional = true }
flake8-bugbear = { version = ">=22.1.11", optional = true }
flake8-builtins = { version = "~2.1", optional = true }
flake8-comprehensions = { version = "~3.10", optional = true }
flake8-eradicate = { version = "~1.4", optional = true }
flake8-executable = { version = "~2.1", optional = true }
flake8-implicit-str-concat = { version = "~0.4", optional = true }
flake8-import-order = { version = "~0.18", optional = true }
flake8-logging-format = { version = "~0.9", optional = true }
flake8-pytest-style = { version = "~1.7", optional = true }
flake8-print = { version = "~5", optional = true }
flake8-simplify = { version = "~0.19", optional = true }
flake8-string-format = { version = "~0.3", optional = true }
flake8-use-fstring = { version = "~1.4", optional = true }
pytest = { version = "^7", optional = true }
pytest-asyncio = { version = "^0.14", optional = true }
pytest-cov = { version = "^3.0", optional = true }
setuptools = { version = "~67", optional = true }
wrapt = "^1.15"
yamllint = { version = "~1.29", optional = true }
zimports = { version = "~0.6", markers = "python_version >= '3.7'", optional = true }

[tool.poetry.extras]
testing = [
    "aiohttp",
    "async-asgi-testclient",
    "coverage",
    "fastapi",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "setuptools",
]
stylecheck = [
    "black",
    "flake8",
    "flake8-bugbear",
    "flake8-builtins",
    "flake8-comprehensions",
    "flake8-eradicate",
    "flake8-executable",
    "flake8-implicit-str-concat",
    "flake8-import-order",
    "flake8-logging-format",
    "flake8-print",
    "flake8-pytest-style",
    "flake8-simplify",
    "flake8-string-format",
    "flake8-use-fstring",
    "setuptools",
    "yamllint",
    "zimports",
]

[build-system]
requires = ["poetry>=1.5.0"]
build-backend = "poetry.masonry.api"
