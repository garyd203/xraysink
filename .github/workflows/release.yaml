---
name: Release

env:
  BUMPVERSION_VERSION: 1.0.1
  POETRY_VERSION: 1.1.12
  # Python version used to build the library
  PYTHON_BUILD_VERSION: 3.6

"on":
  workflow_dispatch

jobs:
  check-branch:
    name: "Check For 'master'"
    runs-on: ubuntu-latest
    steps:
      - name: Abort release against non-master
        if: github.ref != 'refs/heads/master'
        run: |
          echo "Release should only be against master, not '${GITHUB_REF}'"
          exit 1

  version-stamp:
    name: Version Stamp
    # We push the git tag release here before we do the actual pypi publish. If the publish step
    # fails, it doesn't really matter if git contains a phantom release
    needs:
      - check-branch
    runs-on: ubuntu-latest
    outputs:
      release-ref: ${{ steps.export-git-ref.outputs.release-ref }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref || github.ref }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_BUILD_VERSION }}
      - name: Install bump2version
        run: |
          pip install bump2version==${{ env.BUMPVERSION_VERSION }}
      - name: Bump version
        run: |
          bumpversion prerelease --verbose --commit --tag
      - name: Push to git
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref || github.ref }}
          tags: true
      - name: Export stamped git ref
        id: export-git-ref
        run: |
          NEW_GIT_SHA=$(git rev-parse HEAD)
          echo "::set-output name=release-ref::$NEW_GIT_SHA"

  test-source:
    # FIXME run tests again. need a reusbale workflow
    # FIXME needs the updated code. pass the actual ref  (not `master` or tag) forwards as an output
    name: Test
    needs:
      - version-stamp
    runs-on: ubuntu-latest
    steps:
      - name: FIXME
        run: |
          echo FIXME

  build:
    name: Build Library
    needs:
      - version-stamp
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.version-stamp.outputs.release-ref }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_BUILD_VERSION }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@7044c9c69e0265717d52471f66033b8d0e2a69ff  # v2.1.4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Build wheel etc.
        run: |
          poetry build
          ls -l dist
      - name: Upload artifacts for publish
        uses: actions/upload-artifact@v3
        with:
          name: poetry-build
          path: ./dist/xraysink-*

  publish:
    # TODO use github environment to contorl test vs. live pypi
    name: Publish Library
    needs:
      - build
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Publish wheel etc.
        run: |
          # FIXME
          # poetry publish
      - name: FIXME
        run: |
          echo FIXME

  bump-to-prerelease:
    name: Setup Next Release
    needs:
      - publish
    runs-on: ubuntu-latest
    steps:
      # pip install bump2version==1.0.1
      - name: FIXME
        run: |
          echo FIXME
